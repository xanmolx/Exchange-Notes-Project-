/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package studentcompanion;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;
import javax.swing.table.AbstractTableModel;

/**
 *
 * @author anmol singh sethi
 */
public class Viewcourses extends javax.swing.JFrame {

    mytable model = new mytable();
    ArrayList<courses> al = new ArrayList<>();

    /**
     * Creates new form Viewcourses
     */
    public Viewcourses() {
        initComponents();
        setSize(800, 800);
        setVisible(true);
        cbdept.removeAllItems();
        cbdept.addItem("----Select----");
        jt1.setModel(model);
        try {
            Class.forName("com.mysql.jdbc.Driver");
//            System.out.println("Driver Loading done");

            Connection conn = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/student_companion", "root", "system");
//            System.out.println("Connection Created");

            Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,
                    ResultSet.CONCUR_UPDATABLE);
//            System.out.println("Statement Created");

            ResultSet rs = stmt.executeQuery("select * from departments");
            while (rs.next()) {

                cbdept.addItem(rs.getString("department"));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public class courses {

        String coursename;
        String description;

        public courses(String coursename, String description) {
            this.coursename = coursename;
            this.description = description;
        }

    }

    public void fetchData() {
        try {
            al.clear();
            String dept = (String) cbdept.getSelectedItem();
            Class.forName("com.mysql.jdbc.Driver");
//            System.out.println("Driver Loading done");

            Connection conn = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/student_companion", "root", "system");
//            System.out.println("Connection Created");

            Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,
                    ResultSet.CONCUR_UPDATABLE);
//            System.out.println("Statement Created");

            ResultSet rs = stmt.executeQuery("select * from courses where department='" + dept + "'");
            while (rs.next()) {
                String coursename = rs.getString("coursename");
                String description = rs.getString("courseDescription");
                al.add(new courses(coursename, description));
            }
            model.fireTableDataChanged();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cbdept = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jt1 = new javax.swing.JTable();
        bt_del = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel1.setText("Select Department");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(77, 70, 200, 70);

        cbdept.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbdept.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbdeptItemStateChanged(evt);
            }
        });
        cbdept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbdeptActionPerformed(evt);
            }
        });
        getContentPane().add(cbdept);
        cbdept.setBounds(390, 80, 250, 60);

        jScrollPane1.setViewportView(jt1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(40, 150, 830, 360);

        bt_del.setText("Delete");
        bt_del.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_delActionPerformed(evt);
            }
        });
        getContentPane().add(bt_del);
        bt_del.setBounds(170, 540, 550, 100);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbdeptItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbdeptItemStateChanged

        fetchData();

    }//GEN-LAST:event_cbdeptItemStateChanged

    private void bt_delActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_delActionPerformed
          if(jt1.getSelectedRow()==-1)
        {
            JOptionPane.showMessageDialog(rootPane, "Select a course first");
        }
        else
        { int index=jt1.getSelectedRow();
       
        
        int ans = JOptionPane.showConfirmDialog(this,"are you sure you want to delete this row","delete row",JOptionPane.YES_NO_OPTION);
        if(ans==JOptionPane.YES_OPTION)
        {
            String coursename=al.get(index).coursename;
            
            
            
            
            try {
                Class.forName("com.mysql.jdbc.Driver");
//            System.out.println("Driver Loading done");
            
            Connection conn = DriverManager.getConnection
        ("jdbc:mysql://127.0.0.1:3306/student_companion", "root", "system");
//            System.out.println("Connection Created");
            
            Statement stmt = conn.createStatement
        (ResultSet.TYPE_SCROLL_SENSITIVE,
                ResultSet.CONCUR_UPDATABLE);
//            System.out.println("Statement Created");
            
            ResultSet rs = stmt.executeQuery("select * from courses where coursename='"+coursename+"'");
            if(rs.next())
            {
                rs.deleteRow();
                fetchData();
                
            }
            } catch (Exception e) {
            }
            
        }
        }
        
    }//GEN-LAST:event_bt_delActionPerformed

    private void cbdeptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbdeptActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbdeptActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Viewcourses.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Viewcourses.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Viewcourses.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Viewcourses.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Viewcourses().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_del;
    private javax.swing.JComboBox<String> cbdept;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jt1;
    // End of variables declaration//GEN-END:variables

    class mytable extends AbstractTableModel {

        @Override
        public int getRowCount() {
            return al.size();
        }

        @Override
        public int getColumnCount() {
            return 2;
        }

        @Override
        public Object getValueAt(int row, int col) {
            courses d = al.get(row);
            if (col == 0) {
                return d.coursename;
            } else {
                return d.description;
            }

        }

        @Override
        public String getColumnName(int column) {
            if (column == 0) //To change body of generated methods, choose Tools | Templates.
            {

                return "coursename";

            }
            else {
                        return "description";
                    }

        }

    }
}
